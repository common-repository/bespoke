<?php
defined( 'ABSPATH' ) or die( 'Unauthorized' );

if ( ! class_exists( 'BespokeMetaBoxes' ) ) :

class BespokeMetaBoxes extends BespokeBase {

    protected function setup_actions() {
	// add_action( 'bespoke_add_meta_boxes', array( $this, 'add_metrics_meta_box' ) );
	add_action( 'bespoke_add_meta_boxes', array( $this, 'add_teaser_meta_box' ) );

	add_action( 'bespoke_do_meta_boxes', array( $this, 'remove_metrics_meta_box' ) );
    }

    protected function setup_filters() {
	add_filter( 'postbox_classes_post_bespoke-metrics', array( $this, 'add_meta_box_classes' ) );
	add_filter( 'postbox_classes_page_bespoke-metrics', array( $this, 'add_meta_box_classes' ) );
    }

    /**
     * Generated by the WordPress Meta Box generator
     * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
     */

    function add_teaser_meta_box() {
	$id = 'bespoke-teaser';
	$title =  __( 'Bespoke', 'bespoke' );
	$renderFunc = array( $this, 'render_options_meta_box');
	$screens = ['post', 'page'];
	$context = 'advanced';
	$priority = 'high';

	foreach ($screens as $screen) {
	    add_meta_box(
		$id,
		$title,
		$renderFunc,
		$screen,
		$context,
		$priority
	    );
	}
    }

    public function add_metrics_meta_box() {
	add_meta_box(
	    'bespoke-metrics',
	    __( 'Bespoke Metrics', 'bespoke' ),
	    array( $this, 'render_metrics_meta_box'),
	    'post',
	    'side',
	    'default'
	);
	add_meta_box(
	    'bespoke-metrics',
	    __('Bespoke Metrics', 'bespoke'),
	    array( $this, 'render_metrics_meta_box'),
	    'page',
	    'side',
	    'default'
	);
    }

    public function add_meta_box_classes($classes) {
	$bespoke_link = get_post_meta( get_post()->ID, 'bespoke-readmore-self', true );
	if (bespoke()->is_connected() && !empty($bespoke_link)) {
	    array_push($classes,'close_to_the_edge');
	}
	return $classes;
    }

    public function remove_metrics_meta_box(){
	global $post;
	if ( isset( $post ) ){
	    $bespoke = get_post_meta( $post->ID, 'bespoke-readmore-self', true );
	    if ( !isset( $bespoke ) ) {
		remove_meta_box( 'bespoke-metrics' , 'post' , 'side' );
		remove_meta_box( 'bespoke-metrics' , 'page' , 'side' );
	    }
	}
    }

    protected static function get_nonce_id( $action ) {
        return 'bespoke_' . $action . '_nonce';
    }

    /**
     * Renders bespoke options meta box
     */
    public function render_options_meta_box( $post ) {
	$action = 'update_teaser_settings';
	wp_nonce_field( $action, self::get_nonce_id( $action ) );
	$checkedAttr = !!get_post_meta( $post->ID, 'bespoke_teaser_enabled') ? 'checked' : '';
?>
	<p>
	    <input type="checkbox" name="bespoke_teaser_enabled" id="bespoke_teaser_enabled" value="enabled" <?= $checkedAttr ?>>
	    <label for="bespoke_teaser_enabled"><?php _e( 'Display Teaser Banner', 'bespoke' ); ?></label>
	</p>

<?php
    }

    /**
     * Conditionally renders metrics meta box
     */
    public function render_metrics_meta_box( $post) {
	$bespoke = get_post_meta( $post->ID, 'bespoke-readmore-self', true );
	if (!bespoke()->is_connected()) {
	    $this->render_connect_required();
	} else if (empty($bespoke)){
	    $this->render_add_shortcode_message();
	} else {
	    $token = get_option( 'bespoke_access_token' );
	    $info_link = $this->info_link( $bespoke, $token );
	    $this->render_metrics_iframe( $info_link );
	}
    }

    function render_connect_required() {
?>
<p>
    <a style="border:0px" class="stuffbox" href="<?php echo(bespoke()->admin->oauth->connect_url()); ?>">Connect to Bespoke</a>
</p>
<?php
    }

    function render_add_shortcode_message() {
?>
<p>
    Add a Bespoke shortcode to begin viewing metrics.
</p>
<?php
    }

    function render_metrics_iframe( $info_link ) {
?>
	    <iframe id="bespoke_post_metrics"
		    title="Bespoke Post Metrics"
		    width="278"
		    height="350"
		    frameBorder="0"
		    seamless='seamless'
		    scrolling="yes"
		    marginheight="0"
		    marginwidth="0"
		    src=<?php echo( $info_link ); ?>>
	    </iframe>
<?php
    }

    function info_link( $bespoke, $token ) {
	$bespoke_code = trim( parse_url( $bespoke, PHP_URL_PATH ), '/' );
	return bespoke()->url( 'info', $bespoke_code, "frame?token={$token}" );
    }

}
endif;
